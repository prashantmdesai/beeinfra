# yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json

name: beeux
metadata:
  template: beeux-spelling-bee@0.0.1-beta
  
# Infrastructue configuration
infra:
  provider: bicep
  path: infra

# Workload configuration  
services:
  web:
    project: ./src/frontend
    language: js
    host: appservice
    
  api:
    project: ./src/backend
    language: java
    host: containerapp
    docker:
      path: ./src/backend/Dockerfile
      context: ./src/backend

# Environment configuration
environments:
  - name: it
    displayName: "IT Development Environment"
    description: "Cost-optimized development environment with minimal managed services"
    vars:
      AZURE_LOCATION: eastus
      AZURE_RESOURCE_GROUP_NAME: beeux-rg-it-eastus
      AZURE_APP_NAME: beeux-it
      AZURE_ENVIRONMENT_NAME: it
      DATABASE_TYPE: self-hosted
      DATABASE_NAME: beeux_it
      POSTGRES_ADMIN_USERNAME: postgres_admin
      BLOB_CONTAINER_NAME: audio-files-it
      BUDGET_AMOUNT: 15
      ALERT_EMAIL_PRIMARY: prashantmdesai@yahoo.com
      ALERT_EMAIL_SECONDARY: prashantmdesai@hotmail.com
      ALERT_PHONE: +12246564855
      USE_FREE_TIER: true
      USE_MANAGED_SERVICES: false
      ENABLE_SECURITY_FEATURES: basic
      ENABLE_KEY_VAULT: true
      KEY_VAULT_SKU: standard
      ENABLE_API_MANAGEMENT: true
      API_MANAGEMENT_SKU: Developer
      ENABLE_AUTO_SCALING: false
      AUTO_SHUTDOWN_ENABLED: true
      IDLE_SHUTDOWN_HOURS: 1
      SSH_PUBLIC_KEY: ${SSH_PUBLIC_KEY}
      
  - name: qa
    displayName: "QA Testing Environment"
    description: "Security-focused testing environment with managed services"
    vars:
      AZURE_LOCATION: eastus
      AZURE_RESOURCE_GROUP_NAME: beeux-rg-qa-eastus
      AZURE_APP_NAME: beeux-qa
      AZURE_ENVIRONMENT_NAME: qa
      DATABASE_TYPE: managed
      DATABASE_NAME: beeux_qa
      POSTGRES_ADMIN_USERNAME: postgres_admin
      BLOB_CONTAINER_NAME: audio-files-qa
      BUDGET_AMOUNT: 25
      ALERT_EMAIL_PRIMARY: prashantmdesai@yahoo.com
      ALERT_EMAIL_SECONDARY: prashantmdesai@hotmail.com
      ALERT_PHONE: +12246564855
      USE_FREE_TIER: false
      USE_MANAGED_SERVICES: true
      ENABLE_SECURITY_FEATURES: true
      ENABLE_AUTO_SCALING: true
      ENABLE_PRIVATE_ENDPOINTS: true
      ENABLE_WAF: true
      ENABLE_KEY_VAULT: true
      ENABLE_API_MANAGEMENT: true
      API_MANAGEMENT_SKU: Standard
      AUTO_SHUTDOWN_ENABLED: true
      IDLE_SHUTDOWN_HOURS: 1
      SSH_PUBLIC_KEY: ${SSH_PUBLIC_KEY}
      
  - name: prod
    displayName: "Production Environment"
    description: "Enterprise-grade production environment with premium security and performance"
    vars:
      AZURE_LOCATION: eastus
      AZURE_RESOURCE_GROUP_NAME: beeux-rg-prod-eastus
      AZURE_APP_NAME: beeux-prod
      AZURE_ENVIRONMENT_NAME: prod
      DATABASE_TYPE: managed-premium
      DATABASE_NAME: beeux_prod
      POSTGRES_ADMIN_USERNAME: postgres_admin
      BLOB_CONTAINER_NAME: audio-files-prod
      CDN_PROFILE_NAME: beeux-cdn-prod
      BUDGET_AMOUNT: 35
      ALERT_EMAIL_PRIMARY: prashantmdesai@yahoo.com
      ALERT_EMAIL_SECONDARY: prashantmdesai@hotmail.com
      ALERT_PHONE: +12246564855
      USE_FREE_TIER: false
      USE_MANAGED_SERVICES: true
      ENABLE_SECURITY_FEATURES: true
      ENABLE_PREMIUM_SECURITY: true
      ENABLE_AUTO_SCALING: true
      ENABLE_ADVANCED_AUTO_SCALING: true
      ENABLE_PRIVATE_ENDPOINTS: true
      ENABLE_WAF: true
      ENABLE_DDOS_PROTECTION: true
      ENABLE_KEY_VAULT_HSM: true
      ENABLE_CONTENT_TRUST: true
      ENABLE_API_MANAGEMENT: true
      API_MANAGEMENT_SKU: Premium
      AUTO_SHUTDOWN_ENABLED: true
      IDLE_SHUTDOWN_HOURS: 1
      SSH_PUBLIC_KEY: ${SSH_PUBLIC_KEY}

# Hooks for pre and post deployment actions
hooks:
  predeploy:
    posix:
      shell: sh
      run: |
        echo "üöÄ Starting deployment for environment: $AZURE_ENVIRONMENT_NAME"
        echo "üìç Resource Group: $AZURE_RESOURCE_GROUP_NAME"
        echo "üí∞ Budget Limit: $BUDGET_AMOUNT USD/month"
        
  postdeploy:
    posix:
      shell: sh
      run: |
        echo "‚úÖ Deployment completed for $AZURE_ENVIRONMENT_NAME environment"
        echo "üåê Setting up cost monitoring..."
        ./infra/scripts/utilities/setup-cost-alerts.ps1 -EnvironmentName $AZURE_ENVIRONMENT_NAME -BudgetAmount $BUDGET_AMOUNT -ResourceGroupName $AZURE_RESOURCE_GROUP_NAME -PrimaryEmail $ALERT_EMAIL_PRIMARY -SecondaryEmail $ALERT_EMAIL_SECONDARY -PhoneNumber $ALERT_PHONE
        
        if [ "$AZURE_ENVIRONMENT_NAME" != "it" ]; then
          echo "üîí Setting up security features..."
          ./infra/scripts/utilities/setup-security-features.ps1 -EnvironmentName $AZURE_ENVIRONMENT_NAME -ResourceGroupName $AZURE_RESOURCE_GROUP_NAME
          
          echo "üìà Setting up auto-scaling..."
          ./infra/scripts/utilities/setup-autoscaling.ps1 -EnvironmentName $AZURE_ENVIRONMENT_NAME -ResourceGroupName $AZURE_RESOURCE_GROUP_NAME
        fi
        
        if [ "$AUTO_SHUTDOWN_ENABLED" = "true" ]; then
          echo "‚è∞ Setting up auto-shutdown..."
          ./infra/scripts/utilities/setup-auto-shutdown.ps1 -EnvironmentName $AZURE_ENVIRONMENT_NAME -IdleHours $IDLE_SHUTDOWN_HOURS -ResourceGroupName $AZURE_RESOURCE_GROUP_NAME
        fi
        
        echo "‚úÖ Post-deployment configuration complete!"
        echo "üí° To shutdown environment: ./infra/scripts/shutdown/complete-shutdown-$AZURE_ENVIRONMENT_NAME.ps1"
        echo "üîÑ To startup environment: ./infra/scripts/startup/complete-startup-$AZURE_ENVIRONMENT_NAME.ps1"
    
    windows:
      shell: pwsh
      run: |
        Write-Host "‚úÖ Deployment completed for $env:AZURE_ENVIRONMENT_NAME environment" -ForegroundColor Green
        Write-Host "üåê Setting up cost monitoring..." -ForegroundColor Yellow
        & ".\infra\scripts\utilities\setup-cost-alerts.ps1" -EnvironmentName $env:AZURE_ENVIRONMENT_NAME -BudgetAmount $env:BUDGET_AMOUNT -ResourceGroupName $env:AZURE_RESOURCE_GROUP_NAME -PrimaryEmail $env:ALERT_EMAIL_PRIMARY -SecondaryEmail $env:ALERT_EMAIL_SECONDARY -PhoneNumber $env:ALERT_PHONE
        
        if ($env:AZURE_ENVIRONMENT_NAME -ne "it") {
          Write-Host "üîí Setting up security features..." -ForegroundColor Yellow
          & ".\infra\scripts\utilities\setup-security-features.ps1" -EnvironmentName $env:AZURE_ENVIRONMENT_NAME -ResourceGroupName $env:AZURE_RESOURCE_GROUP_NAME
          
          Write-Host "üìà Setting up auto-scaling..." -ForegroundColor Yellow
          & ".\infra\scripts\utilities\setup-autoscaling.ps1" -EnvironmentName $env:AZURE_ENVIRONMENT_NAME -ResourceGroupName $env:AZURE_RESOURCE_GROUP_NAME
        }
        
        if ($env:AUTO_SHUTDOWN_ENABLED -eq "true") {
          Write-Host "‚è∞ Setting up auto-shutdown..." -ForegroundColor Yellow
          & ".\infra\scripts\utilities\setup-auto-shutdown.ps1" -EnvironmentName $env:AZURE_ENVIRONMENT_NAME -IdleHours $env:IDLE_SHUTDOWN_HOURS -ResourceGroupName $env:AZURE_RESOURCE_GROUP_NAME
        }
        
        Write-Host "‚úÖ Post-deployment configuration complete!" -ForegroundColor Green
        Write-Host "üí° To shutdown environment: .\infra\scripts\shutdown\complete-shutdown-$env:AZURE_ENVIRONMENT_NAME.ps1" -ForegroundColor Cyan
        Write-Host "üîÑ To startup environment: .\infra\scripts\startup\complete-startup-$env:AZURE_ENVIRONMENT_NAME.ps1" -ForegroundColor Cyan
