## Done
this application will primarily be used to setup the azure infrastructure for a typical web application (Angular) with REST APIs connecting to a Postgresql database. All the binaries are supposed to be deployed to appropriate azure infrastructure components.
The application setup instructions for the Angular application followed these instructions: C:\dev\beeinfra\instructions.md

The application setup instructions for the REST api application followed these instructions: C:\dev\beeinfra\local-env-instructions.md  and  C:\dev\beeinfra\initial-project-setup.instructions.md

Use those instructions files as a reference, and create an 'instructions.md' for this project that will help setup infrastructure in the three environments IT, QA and Prod.


## Done
Modify the instructions to indicate that for the IT environment, we will use free tier as much as possible. If free tier is not available for a certanin resource, we will use the lowest available paid resource from Azure for that IT environment.

Modify the "infra-instructions.md" such that we should be able to clearly identify which environment we are building.

Modify the instructions such that there is a budget alarm setup as soon as the environment is built to identify whenever the overall 'estimated cost of the resources for that environment exceed more than $10'.  That alert should go to prashantmdesai@yahoo.com, prashantmdesai@hotmail.com as an email and +1 224 656 4855 as a text message.

Modify the instructions such that there is a actual alarm setup as soon as the environment is built to identify whenever the overall 'actual cost of the resources for that environment exceed more than $10'.  That alert should go to prashantmdesai@yahoo.com, prashantmdesai@hotmail.com as an email and +1 224 656 4855 as a text message.

## Done
Modify the "infra-instructions.md" such that 
1. We should be able to clearly identify which environment we are building even while giving any commands on the terminal or on azure CLI.

2. For QA environment, modify the instructions such that there is a budget alarm setup as soon as the environment is built to identify whenever the overall 'estimated cost of the resources for that environment exceed more than $20'.  That alert should go to prashantmdesai@yahoo.com, prashantmdesai@hotmail.com as an email and +1 224 656 4855 as a text message.

3. For QA environment, Modify the instructions such that there is a actual alarm setup as soon as the environment is built to identify whenever the overall 'actual cost of the resources for that environment exceed more than $20'.  That alert should go to prashantmdesai@yahoo.com, prashantmdesai@hotmail.com as an email and +1 224 656 4855 as a text message.

4. For Prod environment, modify the instructions such that there is a budget alarm setup as soon as the environment is built to identify whenever the overall 'estimated cost of the resources for that environment exceed more than $30'.  That alert should go to prashantmdesai@yahoo.com, prashantmdesai@hotmail.com as an email and +1 224 656 4855 as a text message.

5. For Prod environment, Modify the instructions such that there is a actual alarm setup as soon as the environment is built to identify whenever the overall 'actual cost of the resources for that environment exceed more than $30'.  That alert should go to prashantmdesai@yahoo.com, prashantmdesai@hotmail.com as an email and +1 224 656 4855 as a text message.

6. For all environments, if none of the environment resources are used for more than an hour, entire environment including all the resources should be shut down, and the resources released such that they do not cost us. Next time we need the environment, we should be able to rerun the 'environment build out' again to rebuild those resources.

## Done
Modify the "infra-instructions.md" such that 
1. In the IT environment, we will not be using any 'Managed' offerings from Azure for the IT environment. FOr respective resources, if free tier is available, we will use that OR we will use the least paid class of that resource.

2. In the QA and Prod environments, Security is of paramount importance, so, we should use apppropriate security offerings from Azure for QA and Prod environments.

3. In the QA and Prod environments, Performance and scalability is very important, so, we should use appropriate offerings from Azure for the Prod environment. The user facing (front-end, and API) components should have auto-scaling (up and down) configured.

## Done
Modify the "infra-instructions.md" such that 
1. Every environment should have a ready 'shutdown' script which will shut down all resources in that environment, release those resources completely, such that the cost of that environment goes down to zero. That script should be possible to be executed using terminal in vscode or azure cli. That script should encompass all the azure resources created for that environment.

## Done
Modify the "infra-instructions.md" such that 
1. Every environment should have a ready 'startup' script which will start all our required resources in that environment. That script should be possible to be executed using terminal in vscode or azure cli. That script should encompass all the azure resources required for that particular environment.
2. Every time the overall configuration of the environment changes due to addition or removal of a resource related scripts, the startup and shutdown scripts of that environment must be modified to cover for that change.

## Done
Modify the "infra-instructions.md" such that 
1. In all environments, we will be using azure key vault to store all the secrets

## Done
Modify the "infra-instructions.md" such that 
1. QA environment database size, file storage size does not need to be as big as production. It should be slightly larger than the IT environment and not more than 20% of the production environment.

## Done
Modify the "infra-instructions.md" such that 
1. Prod environment shutdown scripts should have special prompting and "triple confirmation mechanism" to let the person executing the script to choose whether they really want to shutdown "production".
2. In all environments, the REST APIs should be exposed via the Azure API Gateway.

## Done
Modify the "infra-instructions.md" such that 
1. Every time any environment is started or shutdown, the user should be prompted with anticipated cost that this environment will cost per hour of usage and the user should be explicitly made to say 'Yes' to that cost and only then the script should proceed.

## Done
Modify the "infra-instructions.md" such that 
1. All the actual infrastructure scripts that are part of the 'instructions.md' are created as actual files in this workspace with appropriate folder structure, and the "infra-instructions.md" file shoudl just have the english instructions followed in this workspace.


# Deploy IT environment
azd env select it
azd up

# Deploy QA environment  
azd env select qa
azd up

# Deploy Production environment
azd env select prod
azd up


## Done
1. In each environment, deploy a 'linux virtual machine' for the use of a developer who can login to that machine and be able to access any azure resources that belong to that environment.
2. Using that virtual machine, the developer should be able to access any of the Azure resources present in that environment. It should have all the requisite software (Azure CLI, Github CLI, Git etc.) installed on it ready for use by the developer.
3. Once the environment setup is complete, the respective setup or startup script shoudl display (on the terminal or console) the IP address and machine name of this 'linux virtual machine' so that the developer does not have to search for that elsewhere.

# Done
1. Modify the "infra-instructions.md" such that all web traffic should always be over HTTPS
2. Modify relevant infrastructure setup code and scripts such that all web traffic should always be over HTTPS

# Done
make sure all instructions mentioned in the infrasetup.instructions.md are followed throughout this project

# Done
in this project, we used 'Azure Biceps' to setup the infrastructure, we want to change that to be 'Terraform' henceforth. This is applicable for all the environments. Please make necessary changes to the documentation, code, code comments, scripts and any other artifacts in this application.

##
Need azure config management from IT onwards

##
We will use a redis docker container in local and IT environments, and we will use Azure cache for QA and Prod

